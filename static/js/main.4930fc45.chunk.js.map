{"version":3,"sources":["component/loginComponent/LoginInput.js","common/globalFunction.js","component/loginComponent/Login.js","contexts/userInfo.js","view/LoginView.js","App.js","reportWebVitals.js","index.js"],"names":["LoginInput","props","classes","makeStyles","id","overflow","borderRadius","opacity","width","height","fontSize","fontWeight","lineHeight","marginTop","useStyles","TextField","label","variant","size","className","onChange","e","setUser","target","value","lcst","inputName","userValue","type","style","key","isClear","localStorage","setItem","removeItem","Login","onLogin","password","setId","setPassword","isRemember","setIsRemember","reset","Section","position","backgroundColor","loginSection","top","loginTitle","marginLeft","letterSpacing","checkedTitle","color","searchButton","loginChecked","Checkbox","inputProps","checked","useCallback","Button","disableElevation","onClick","React","memo","UserContext","createContext","userState","userid","userpw","sabun","userActions","setUserid","setUserpw","setSabun","StyledLogin","Consumer","styled","div","withRouter","history","useContext","useState","useEffect","getItem","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4930fc45.chunk.js","sourcesContent":["import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst LoginInput = (props) => {\n  const useStyles = makeStyles(() => ({\n    id: {\n      overflow: 'hidden',\n      borderRadius: 10,\n      opacity: 0.7,\n      width: 270,\n      height: 45,\n      '& label': {\n        fontSize: '14px',\n        fontWeight: 'bold',\n        lineHeight: '20px',\n        marginTop: -4,\n      },\n    },\n  }));\n  const classes = useStyles();\n  return (\n    <div>\n      <TextField\n        label={props.label}\n        variant=\"filled\"\n        size=\"small\"\n        className={classes.id}\n        onChange={(e) => {\n          props.setUser(e.target.value);\n          props.lcst(props.inputName, e.target.value);\n          //props.setAllList(props.lcst(props.inputName, e.target.value));\n        }}\n        value={props.userValue}\n        type={props.label === '비밀번호' ? 'password' : ''}\n        style={\n          props.label === '비밀번호' ? { marginTop: 10 } : { marginTop: 100 }\n        }\n      />\n    </div>\n  );\n};\n\nexport default LoginInput;\n","export const lcst = (key, value, isClear) => {\n  localStorage.setItem(key, value);\n  if (isClear) {\n    localStorage.removeItem('id');\n    localStorage.removeItem('pass');\n    localStorage.removeItem('isRemember');\n  }\n};\n\nexport const time = () => {\n  var date = new Date();\n  //var year = date.getFullYear();\n  var month = date.getMonth() + 1;\n  var day = date.getDate();\n  var hour = date.getHours();\n  var minutes = date.getMinutes();\n\n  return month + '월' + day + '일' + hour + '시' + minutes + '분';\n};\n\nexport const onHref = (search, id, password) => {\n  var arg =\n    '/servlets/HtmLogin?CMD=HtmClientComCdLogin&HtmComId=' +\n    encodeURIComponent(id) +\n    '&HtmComPass=' +\n    encodeURIComponent(password) +\n    '&HtmCorCd=himgt&HtmComCd=himgt&HtmClientCd=' +\n    search.htmComCd +\n    '&HtmClientNm=' +\n    encodeURIComponent(search.htmComNm);\n  if (id === '' || password === '') arg = '';\n  var url = 'https://' + search.htmAlias + '.himgt.net' + arg;\n\n  //document.location.href = url;\n  window.open(url);\n};\n\nexport const idCheck = (id, password) => {\n  // console.log('id', id);\n  //console.log('password', password);\n  if (id === '' || password === '') {\n    alert('아이디 또는 비밀번호를 확인하세요.');\n    return false;\n  }\n  return true;\n};\n","import { makeStyles } from '@material-ui/core/styles';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport React, { useCallback } from 'react';\nimport LoginInput from './LoginInput';\nimport { lcst } from '../../common/globalFunction';\n\nconst Login = ({\n  onLogin,\n  id,\n  password,\n  setId,\n  setPassword,\n  isRemember,\n  setIsRemember,\n  reset,\n}) => {\n  const useStyles = makeStyles(() => ({\n    Section: {\n      position: 'absolute',\n      width: '400px',\n      backgroundColor: '#ffffff',\n      borderRadius: '10px',\n    },\n    loginSection: {\n      height: '350px',\n      top: '190px',\n      borderRadius: '10px',\n      backgroundColor: '#ffffff',\n    },\n    loginTitle: {\n      position: 'absolute',\n      marginTop: '55px',\n      marginLeft: '70px',\n      fontWeight: 'bold',\n      fontSize: '18px',\n      lineHeight: '26px',\n      letterSpacing: '-0.01em',\n    },\n    checkedTitle: {\n      fontSize: '14px',\n      lineHeight: '26px',\n      color: '#666666',\n    },\n    searchButton: {\n      '&.MuiButton-root:hover': {\n        backgroundColor: '#3474E4',\n        fontWeight: 'bold',\n      },\n      width: 270,\n      height: 45,\n      backgroundColor: '#3474E4',\n      borderRadius: 10,\n      marginTop: 10,\n      fontSize: 16,\n    },\n    loginChecked: {\n      marginLeft: -125,\n    },\n  }));\n\n  const classes = useStyles();\n  return (\n    <article className={`${classes.Section} ${classes.loginSection} `}>\n      <h3 className={classes.loginTitle}>HTMS 계정 정보</h3>\n      <LoginInput\n        reset={reset}\n        setUser={setId}\n        lcst={lcst}\n        userValue={id}\n        label=\"아이디\"\n        inputName=\"id\"\n      />\n      <LoginInput\n        reset={reset}\n        setUser={setPassword}\n        lcst={lcst}\n        userValue={password}\n        label=\"비밀번호\"\n        inputName=\"pass\"\n      />\n      <Checkbox\n        size=\"small\"\n        className={classes.loginChecked}\n        inputProps={{ 'aria-label': 'checkbox with small size' }}\n        checked={isRemember}\n        onChange={useCallback(\n          (e) => {\n            setIsRemember((isRemember) => e.target.checked);\n            lcst('isRemember', e.target.checked);\n            if (!e.target.checked) lcst('', '', true);\n          },\n          [setIsRemember],\n        )}\n      />\n      <span className={classes.checkedTitle}>아이디/비밀번호 저장</span>\n      <br />\n      <Button\n        variant=\"contained\"\n        className={classes.searchButton}\n        color=\"primary\"\n        disableElevation\n        onClick={(e) => {\n          onLogin(id, password);\n        }}\n      >\n        조회하기\n      </Button>\n    </article>\n  );\n};\n\nexport default React.memo(Login);\n","import { createContext, useState } from 'react';\r\n\r\nconst UserContext = createContext({\r\n  userState: { userid: '', userpw: '', sabun: '' },\r\n  userActions: {\r\n    setUserid: () => {},\r\n    setUserpw: () => {},\r\n    setSabun: () => {},\r\n  },\r\n});\r\n\r\nconst UserProvider = (props) => {\r\n  const [userid, setUserid] = useState('');\r\n  const [userpw, setUserpw] = useState('');\r\n  const [sabun, setSabun] = useState('');\r\n\r\n  const value = {\r\n    userState: { userid, userpw, sabun },\r\n    userActions: { setUserid, setUserpw, setSabun },\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider value={value}>{props.children}</UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport default UserContext;\r\n\r\nconst { Consumer: UserConsumer } = UserContext;\r\n\r\nexport { UserProvider, UserConsumer };\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Login from \"../component/loginComponent/Login\";\r\nimport { withRouter } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport UserContext from \"../contexts/userInfo\";\r\n\r\nconst StyledLogin = styled.div`\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  font-family: Noto Sans KR;\r\n  font-style: normal;\r\n  width: 400px;\r\n  background-color: #ffffff;\r\n`;\r\n\r\nvar url = \"https://api.himgt.net/login/payMail\";\r\n\r\nconst LoginView = ({ history }) => {\r\n  const { userActions } = useContext(UserContext);\r\n  const [id, setId] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isRemember, setIsRemember] = useState(false);\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"isRemember\")) {\r\n      setIsRemember(true);\r\n      setId(localStorage.getItem(\"id\"));\r\n      setPassword(localStorage.getItem(\"pass\"));\r\n    }\r\n  }, []);\r\n\r\n  const onLogin = () => {\r\n    console.log(\"id\", id, \"password\", password);\r\n    axios.post(url, { htmComId: id, htmComPass: password }).then((response) => {\r\n      console.log(\"response.data.ResultCodeVo\", response.data.ResultCodeVo);\r\n      if (response.data.ResultCodeVo.resultCode !== \"200\") {\r\n        alert(\"아이디 또는 비밀번호를 확인하세요.\");\r\n      } else {\r\n        userActions.setUserid(id);\r\n        userActions.setUserpw(password);\r\n\r\n        // userActions.setSabun(response.data.resultMsg);\r\n        sessionStorage.setItem(\"userid\", id);\r\n        sessionStorage.setItem(\"userpw\", password);\r\n        sessionStorage.setItem(\r\n          \"JSESSIONID\",\r\n          response.data.PayMailVo.jsessionid\r\n        );\r\n        console.log(\"JSESSIONID\", response.data.PayMailVo.jsessionid);\r\n        sessionStorage.setItem(\"sabun\", response.data.PayMailVo.htmPerSabun);\r\n        history.push({\r\n          pathname: \"/\",\r\n          state: {\r\n            userid: id,\r\n            userpw: password,\r\n            sabun: response.data.PayMailVo.htmPerSabun,\r\n            JSESSIONID: response.data.PayMailVo.jsessionid,\r\n          },\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const test = 1;\r\n\r\n  return test === 1 ? (\r\n    <StyledLogin>\r\n      <Login\r\n        id={id}\r\n        setId={setId}\r\n        password={password}\r\n        setPassword={setPassword}\r\n        isRemember={isRemember}\r\n        setIsRemember={setIsRemember}\r\n        // onLogin={onLogin}\r\n      />\r\n    </StyledLogin>\r\n  ) : (\r\n    <UserContext.Consumer>\r\n      {(value) => {\r\n        console.log(value);\r\n        return (\r\n          <StyledLogin>\r\n            <Login\r\n              id={value.userState.userid}\r\n              setId={setId}\r\n              password={password}\r\n              setPassword={setPassword}\r\n              isRemember={isRemember}\r\n              setIsRemember={setIsRemember}\r\n              //  onLogin={onLogin}\r\n            />\r\n          </StyledLogin>\r\n        );\r\n      }}\r\n    </UserContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginView);\r\n","//import \"./App.css\";\n//import Payroll from \"./view/Payroll\";\nimport LoginView from \"./view/LoginView\";\n//import ModalForm, { ConfirmBox } from \"./view/ModalForm\";\nimport { Route } from \"react-router\";\n//import { PayrollProvider } from \"./contexts/payrollData\";\n//import { SendPayMailProvider } from \"./contexts/SendPayMail\";\n\nfunction App() {\n  return (\n    /*   <PayrollProvider>\n      <SendPayMailProvider>\n        <Route path=\"/login\" component={Payroll} /> */\n    <>\n      <LoginView />\n    </>\n    /*    <Route path=\"/history\" component={ModalForm} />\n        <Route path=\"/confirm\" component={ConfirmBox} />\n  \n      </SendPayMailProvider>\n    </PayrollProvider>*/\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"core-js/stable\";\nimport \"regenerator-runtime/runtime\";\nimport \"react-app-polyfill/ie9\";\nimport \"react-app-polyfill/ie11\";\nimport \"react-app-polyfill/stable\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}